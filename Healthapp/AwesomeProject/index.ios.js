'use strict';var React = require('react-native');var SelfAppointment = require('./SelfAppointment');var {AppRegistry, StyleSheet,  Navigator,  ScrollView,  StyleSheet,  Text,  TouchableHighlight,  TouchableOpacity,View} = React;var NavigationBarRouteMapper = {  LeftButton: function(route, navigator, index, navState) {    if (index === 0) {      return null;    }    var previousRoute = navState.routeStack[index - 1];    return (      <TouchableOpacity        onPress={() => navigator.pop()}        style={styles.navBarLeftButton}>        <Text style={[styles.navBarText, styles.navBarButtonText]}>          {previousRoute.title}        </Text>      </TouchableOpacity>    );  },  RightButton: function(route, navigator, index, navState) {    return (      <TouchableOpacity        onPress={() => navigator.push(newRandomRoute())}        style={styles.navBarRightButton}>        <Text style={[styles.navBarText, styles.navBarButtonText]}>          Next        </Text>      </TouchableOpacity>    );  },  Title: function(route, navigator, index, navState) {    console.log(route.title);    return (      <Text style={[styles.navBarText, styles.navBarTitleText]}>        {route.title} [{index}]      </Text>    );  },};class NavButton extends React.Component {  render() {    return (      <TouchableHighlight        style={styles.button}        underlayColor="#B5B5B5"        onPress={this.props.onPress}>        <Text style={styles.buttonText}>{this.props.text}</Text>      </TouchableHighlight>    );  }}function newRandomRoute() {  return {    title: '#' + Math.ceil(Math.random() * 1000),  };}var Container = React.createClass({  render: function() {    var Component = this.props.route.component;    return (      <View >        <Component ref="mainComponent"          navigator={this.props.navigator}          currentRoute={this.props.route}          {...this.props.route.passProps}        />      </View>    );  }});//var SearchScreen = require('./Home');var AwesomeProject = React.createClass(  {    renderScene(route, navigator) {      console.log(this.props);      return <View style={styles.scene}><Container        ref={this.onLoadedScene}        route={route}        navigator={navigator}        {...this.props}      /></View>    },      componentWillMount: function() {        var navigator = this.props.navigator;        var callback = (event) => {          console.log(            `NavigationBarSample : event ${event.type}`,            {              route: JSON.stringify(event.data.route),              target: event.target,              type: event.type,            }          );        };        // Observe focus change events from this component.        this._listeners = [        //  navigator.navigationContext.addListener('willfocus', callback),        //  navigator.navigationContext.addListener('didfocus', callback),        ];      },      componentWillUnmount: function() {      //  this._listeners && this._listeners.forEach(listener => listener.remove());      },      render: function() {        return (          <Navigator            debugOverlay={false}            style={styles.appContainer}            initialRoute={{component: SelfAppointment,            title: 'Appointment'}}            renderScene={this.renderScene}            navigationBar={              <Navigator.NavigationBar                routeMapper={NavigationBarRouteMapper}                style={styles.navBar}              />            }          />        );      },  },);var styles = StyleSheet.create({  messageText: {    fontSize: 17,    fontWeight: '500',    padding: 15,    marginTop: 50,    marginLeft: 15,  },  button: {    backgroundColor: 'white',    padding: 15,    borderBottomWidth: StyleSheet.hairlineWidth,    borderBottomColor: '#CDCDCD',  },  buttonText: {    fontSize: 17,    fontWeight: '500',  },  navBar: {    backgroundColor: 'white',  },  navBarText: {    fontSize: 16,    marginVertical: 10,  },  navBarTitleText: {    fontWeight: '500',    marginVertical: 9,  },  navBarLeftButton: {    paddingLeft: 10,  },  navBarRightButton: {    paddingRight: 10,  },  navBarButtonText: {  },  scene: {    flex: 1,        marginTop: 65,    backgroundColor: '#EAEAEA',  },});AppRegistry.registerComponent('AwesomeProject', () => AwesomeProject);