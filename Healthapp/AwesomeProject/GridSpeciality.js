'use strict';var React = require('react-native');var Test = require('./ResultsScreen');var Dimensions = require('Dimensions');var windowSize = Dimensions.get('window');//const fetch = require('fetch');var{  View,  Text,  Image,  ListView,  StyleSheet,  ActivityIndicatorIOS,  TouchableHighlight} = React;var buildUrl = function(q) {  return 'http://54.83.205.169/healthapp/api/speciality';//'https://www.googleapis.com/books/v1/volumes?q=history&langRestrict=en&maxResults=40';};var ResultsScreen = React.createClass({  getInitialState: function() {    return {      isLoading: true,      dataSource: new ListView.DataSource({        rowHasChanged: (row1, row2) => row1 !== row2,      }),    }; },    _pressRow: function(termId,termName) {      console.log(this.props);      this.props.navigator.push({        title: termName,        component: Test,        passProps: { 'category': termId},      });    },    componentDidMount: function() {      this.fetchResults();    },    fetchResults: function() {      fetch(buildUrl())      .then(response => response.json())      .then(jsonData => {        this.setState({          isLoading: false,          dataSource: this.state.dataSource.cloneWithRows(jsonData)        });        //console.dir(jsonData.items);      })      .catch(error => console.log(error));    },      renderLoadingMessage: function() { return (        <View style={styles.container}>        <ActivityIndicatorIOS        animating={this.state.isLoading}        style={[styles.centering, {height: 80}]}        size="large"        />        </View>      ); },      renderResults: function() {        console.log('rendering result');        return (          <ListView          dataSource={this.state.dataSource}          renderRow={this.renderBook}          contentContainerStyle={styles.listView}          />        ); },        renderBook: function(book) { return (            <TouchableHighlight onPress={() => this._pressRow(book['Term ID'],book.name)}>              <View style={styles.row}>          <Image          style={styles.thumbnail}          source={{uri: book['Speciality Picture']}}          />          <View style={styles.rightContainer}>          <Text style={styles.subtitle}>          {book.name}          </Text>          </View>            </View>        </TouchableHighlight>      );        },        render: function() {          if (this.state.isLoading) {            return this.renderLoadingMessage(); } else {              return this.renderResults(); }            },          });          var styles = StyleSheet.create({            container: {              flex: 1,              flexDirection: 'column',              justifyContent: 'center',              alignItems: 'center',              backgroundColor: '#5AC8FA',            },            thumbnail: {              width: 70,              height: 108,              marginRight: 16,            },            label: {              fontSize: 24,              fontWeight: 'normal',              color: '#fff',            },            listView: {              flexDirection: 'row',        flexWrap: 'wrap',            },            rightContainer: {              flex: 1,            },            row: {              margin: 3,         width: windowSize.width/2-20,           justifyContent: 'center',              alignItems: 'center',              backgroundColor: '#5AC8FA',              paddingTop: 20,              paddingBottom: 20,              paddingLeft: 20,              paddingRight: 20,              marginTop: 1,            },centering: {              alignItems: 'center',              justifyContent: 'center',            },            title: {              fontSize: 20,              fontWeight: 'bold',              color: '#fff',            },            subtitle: {              fontSize: 16,              fontWeight: 'normal',              color: '#fff',            },          });          module.exports = ResultsScreen;