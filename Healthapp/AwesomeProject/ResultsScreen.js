'use strict';var React = require('react-native');var DoctorDetail = require('./DoctorDetail');//const fetch = require('fetch');var{  View,  Text,  Image,  ListView,  StyleSheet,  ActivityIndicatorIOS,  TouchableHighlight} = React;var buildUrl = function(q) {  return 'http://54.83.205.169/healthapp/api/doctors?category='+q;//'https://www.googleapis.com/books/v1/volumes?q=history&langRestrict=en&maxResults=40';};var ResultsScreen = React.createClass({  getInitialState: function() {    return {      isLoading: true,      dataSource: new ListView.DataSource({        rowHasChanged: (row1, row2) => row1 !== row2,      }),    }; },    componentDidMount: function() {      this.fetchResults(this.props.category);    },    _pressRow: function(uid,name) {      this.props.navigator.push({        title: name,        component: DoctorDetail,        passProps: { 'category': uid},      });    },    fetchResults: function(category) { fetch(buildUrl(category))      .then(response => response.json())      .then(jsonData => {        console.log(jsonData);        this.setState({          isLoading: false,          dataSource: this.state.dataSource.cloneWithRows(jsonData)        });        //console.dir(jsonData.items);      })      .catch(error => console.log(error)); },      renderLoadingMessage: function() { return (        <View style={styles.container}>          <Text>            Fetching Data...          </Text>          <ActivityIndicatorIOS            animating={this.state.isLoading}            style={[styles.centering, {height: 80}]}            size="large"            />        </View>      ); },      renderResults: function() {        console.log('rendering result');        return (          <ListView            dataSource={this.state.dataSource}            renderRow={this.renderBook}            style={styles.listView}            />        ); },        renderBook: function(book) { return (          <TouchableHighlight onPress={() => this._pressRow(book.Uid,book.name)}>            <View style={styles.row}>              <Image                style={styles.thumbnail}                source={{uri: book['Profile Image']}}                />              <View style={styles.rightContainer}>                <Text style={styles.title}>                  {book.name}                </Text>                <Text style={styles.subtitle}>                  {book.Qualification}                </Text>              </View>            </View>          </TouchableHighlight>        );      },      render: function() {        if (this.state.isLoading) {          return this.renderLoadingMessage(); } else {            return this.renderResults(); }          },        });        var styles = StyleSheet.create({          container: {            flex: 1,            flexDirection: 'column',            justifyContent: 'center',            alignItems: 'center',            backgroundColor: '#5AC8FA',          },          thumbnail: {            width: 70,            height: 108,            marginRight: 16,          },          label: {            fontSize: 24,            fontWeight: 'normal',            color: '#fff',          },          listView: {          },          rightContainer: {            flex: 1,          },          row: {            flex: 1,            flexDirection: 'column',            justifyContent: 'center',            alignItems: 'center',            backgroundColor: '#5AC8FA',            paddingTop: 20,            paddingBottom: 20,            paddingLeft: 20,            paddingRight: 20,            marginTop: 1,          },          title: {            fontSize: 20,            fontWeight: 'bold',            color: '#fff',          },          subtitle: {            fontSize: 16,            fontWeight: 'normal',            color: '#fff',          },        });        module.exports = ResultsScreen;