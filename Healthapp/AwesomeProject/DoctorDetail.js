'use strict';var React = require('react-native');//const fetch = require('fetch');var{  View,  Text,  Image,  StyleSheet,  ActivityIndicatorIOS,  TouchableHighlight} = React;var buildUrl = function(q) {  return 'http://54.83.205.169/healthapp/api/doctors?uid='+q;//'https://www.googleapis.com/books/v1/volumes?q=history&langRestrict=en&maxResults=40';};var ResultsScreen = React.createClass({  getInitialState: function() {    return {      isLoading: true,      dataSource: '',    }; },    componentDidMount: function() {      this.fetchResults(this.props.category);    },    _pressRow: function(uid) {      this.props.navigator.push({        title: 'Results',        component: DoctorDetail,        passProps: { 'category': uid},      });    },    fetchResults: function(category) { fetch(buildUrl(category))      .then(response => response.json())      .then(jsonData => {        console.log(jsonData);        this.setState({          isLoading: false,          dataSource: jsonData[0]        });      })      .catch(error => console.log(error)); },      renderLoadingMessage: function() { return (        <View style={styles.container}>          <Text>            Fetching Data...          </Text>          <ActivityIndicatorIOS            animating={this.state.isLoading}            style={[styles.centering, {height: 80}]}            size="large"            />        </View>      ); },      renderResults: function() {        return (          <View style={styles.row}>            <Image              style={styles.thumbnail}              source={{uri: this.state.dataSource['Profile Image']}}              />            <View style={styles.rightContainer}>              <Text style={styles.title}>                Name: {this.state.dataSource.name}              </Text>              <Text style={styles.subtitle}>                Specialty: {this.state.dataSource.Category}              </Text>              <Text style={styles.subtitle}>                Qualification: {this.state.dataSource.Qualification}              </Text>                <Text style={styles.subtitle}>                Consultation fee: {this.state.dataSource['Consultation fee'].value}              </Text>                <Text style={styles.subtitle}>                    year of experience: {this.state.dataSource['year of experience']}              </Text>                <Text style={styles.subtitle}>                    Past Experience: {this.state.dataSource['Past Experience'].map(function(value) {               return <Text key={value}>{value}</Text>                         })}              </Text>            </View>          </View>        ); },        render: function() {          if (this.state.isLoading) {            return this.renderLoadingMessage(); } else {              return this.renderResults(); }            },          });          var styles = StyleSheet.create({            container: {              flex: 1,              flexDirection: 'column',              justifyContent: 'center',              alignItems: 'center',              backgroundColor: '#5AC8FA',            },            thumbnail: {              width: 70,              height: 108,              marginRight: 16,            },            label: {              fontSize: 24,              fontWeight: 'normal',              color: '#fff',            },            listView: {            },            rightContainer: {              flex: 1,            },            row: {              flex: 1,              flexDirection: 'column',              justifyContent: 'center',              alignItems: 'center',              backgroundColor: '#5AC8FA',              paddingTop: 20,              paddingBottom: 20,              paddingLeft: 20,              paddingRight: 20,              marginTop: 1,            },            title: {              fontSize: 20,              fontWeight: 'bold',              color: '#fff',            },            subtitle: {              fontSize: 16,              fontWeight: 'normal',              color: '#fff',            },          });          module.exports = ResultsScreen;